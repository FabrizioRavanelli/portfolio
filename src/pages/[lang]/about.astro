---
import Layout from '../../layouts/Layout.astro';
import ExperienceItem from '../../components/ExperienceItem.astro';
import netgoLogo from '../../assets/company-logos/netgo_gmbh_logo.jpeg';
import gvlLogo from '../../assets/company-logos/gvl_logo.jpeg';
import uniLogo from '../../assets/company-logos/university.jpeg';
import AnimatedContent from '../../components/AnimatedContent.astro';
import {getStaticPaths, getLangFromUrl, useTranslations} from '../../i18n/ui';

const experiences = [
  {
    logo: netgoLogo,
    title: "Senior Full Stack Developer",
    company: "netgo software GmbH - part of netgo group",
    location: "Berlin",
    period: "08/2017 - 03/2023",
    responsibilities: [
      "Developed a real estate financing platform using Angular and C# .NET",
      "Modernized legacy WinForms applications to web applications",
      "Implemented REST interfaces with ASP.NET Web API and OData",
      "Conducted code reviews and pair programming sessions",
      "Created and executed unit and integration tests"
    ]
  },
  {
    logo: gvlLogo,
    title: "Software Developer",
    company: "GVL - Performance Rights Organisation mbH",
    location: "Berlin",
    period: "12/2012 - 08/2017",
    responsibilities: [
      "Implemented XML-based data interfaces for communication between German TV stations",
      "Developed WPF tools for data processing using .NET Framework 4.5",
      "Generated XML data in DDEX format for copyright information exchange"
    ]
  }
];

const educations = [
  {
    logo: uniLogo,
    title: "Bachelor of Science in Computer Science",
    company: "Technical University of Berlin",
    location: "Berlin",
    period: "09/2009 - 06/2012",
    responsibilities: [
      "Focused on software engineering and database systems",
      "Completed a thesis on 'Optimization of Database Queries in Distributed Systems'",
      "Participated in various coding competitions and hackathons"
    ]
  }
];

export { getStaticPaths };

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<Layout title={t("about.title")} lang={lang}>
  <AnimatedContent>
    <main class="container mx-auto px-4 py-8">
      <h1 class="text-4xl font-bold mb-6 text-primary">{t("about.title")}</h1>
      <div class="bg-secondary bg-opacity-10 p-6 rounded-lg mb-8">
        <p class="text-xl mb-4">{t("about.description")}</p>
        <p class="text-xl mb-4 font-semibold text-accent">{t("about.internationalExperience")}</p>
      </div>

      <h2 class="text-3xl font-semibold mb-6 text-primary">{t("about.experience.title")}</h2>
      {experiences.map((exp) => (
        <ExperienceItem {...exp} />
      ))}

      <h2 class="text-3xl font-semibold mb-6 text-primary">{t("about.education.title")}</h2>
      {educations.map((edu) => (
        <ExperienceItem {...edu} />
      ))}
    </main>
  </AnimatedContent>
</Layout>